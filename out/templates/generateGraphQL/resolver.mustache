import { Resolver, Mutation, Args, Query } from '@nestjs/graphql';
import { {{nameUpper}}Type } from './{{nameLower}}.type';
import { Create{{nameUpper}}Input } from './{{nameLower}}.input';
import { {{nameUpper}}Service } from './{{nameLower}}.service';

@Resolver((of) => {{nameUpper}}Type)
export class {{nameUpper}}Resolver {
  constructor(private {{nameLower}}Service: {{nameUpper}}Service) {}

  @Query((returns) => {{nameUpper}}Type)
  async {{nameLower}}(@Args('id') id: string) {
    return this.{{nameLower}}Service.get{{nameUpper}}(id);
  }

  @Query((returns) => [{{nameUpper}}Type])
  async {{nameLower}}s() {
    return this.{{nameLower}}Service.get{{nameUpper}}s();
  }

  @Mutation((returns) => {{nameUpper}}Type)
  async create{{nameUpper}}(
    @Args('create{{nameUpper}}Input') create{{nameUpper}}Input: Create{{nameUpper}}Input,
  ) {
    return this.{{nameLower}}Service.create{{nameUpper}}(create{{nameUpper}}Input);
  }
}
